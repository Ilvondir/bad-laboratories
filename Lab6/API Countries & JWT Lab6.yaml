openapi: 3.0.0
info:
  version: '1.0'
  title: 'Countries API Laravel & JWT Auth'
  description: Lab006 PAB
servers:
  - description: Laravel
    url: http://localhost:8000/api
paths:
  /auth/login:
    post:
      tags:
        - auth 
      summary: Get a JWT via given credentials
      responses:  
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_token'                  
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credentials'
  /auth/me:
    post:
      tags:
        - auth 
      summary: Get the authenticated user
      responses:  
        '200':
          description: info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'                  
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
      security:
      - bearerAuth: []
  /auth/logout:
    post:
      tags:
        - auth 
      summary: Log the user out (invalidate the token)
      responses:  
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'            
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
      security:
      - bearerAuth: []
  /auth/refresh:
    post:
      tags:
        - auth 
      summary: Refresh a token
      responses:  
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_token'                  
        '401':
          description: unauthorized
      security:
      - bearerAuth: []
  /auth/forgot-password:
    post:
      tags:
        - auth
      summary: Get the token for a password reset request
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email: 
                  type: string
                  example: email@email.com
      responses:
        '202':
          description: success
        '404':
          description: bad request
        '422':
          description: invalid email
  /auth/reset-password:
    post:
      tags:
        - auth
      summary: Reset a user's password
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: reset-password-token
                email: 
                  type: string
                  example: email@email.com
                password:
                  type: string
                  example: "12345"
                  minLength: 3
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: user not found
        '422':
          description: invalid request inputs
  /countries:
    get:
      tags:
        - countries
      summary: Returns all countries
      responses:
        '200':
          description: A list of countries.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CountryCollection'
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          $ref: '#/components/schemas/403Error'
      security:
      - bearerAuth: []
    post:
      tags:
        - countries
      summary: Store a new country
      operationId: storeCountry
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResource'
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          $ref: '#/components/schemas/403Error'
        '422':
          description: unprocessable content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreCountryRequest'
        description: new coutry data
        required: true
      security:
      - bearerAuth: []
  /countries/{countryId}:
    get:
      tags:
        - countries
      description: Returns a country based on ID
      summary: Find country by ID
      responses:
        '200':
          description: country response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResource'
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          $ref: '#/components/schemas/403Error'
        '404':
          description: 'not found'
      security:
      - bearerAuth: []
    put:
      tags:
        - countries
      summary: Update a country
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResource'
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          $ref: '#/components/schemas/403Error'
        '404':
          description: country not found
        '422':
          description: unprocessable content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCountryRequest'
        description: updated country data
        required: true
      security:
      - bearerAuth: []
    delete:
      tags:
        - countries
      summary: Delete a country
      responses:
        '204':
          description: successful operation
        '401':
          $ref: '#/components/schemas/UnauthorizedError'
        '403':
          $ref: '#/components/schemas/403Error'
        '404':
          description: not found
      security:
      - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/countryId'
components:
  parameters:
    countryId:
      name: countryId
      in: path
      description: ID of country to use
      required: true
      schema:
        type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UnauthorizedError:
      description: Access token is missing or invalid
    403Error:
      description: This action is unauthorized
    Country:
      type: object
      required:
        - name
        - code
        - currency
        - area
        - language
      properties:
        name:
          type: string
          maxLength: 50
          example: Name
        code:
          type: string
          maxLength: 3
          example: COD
        currency:
          type: string
          maxLength: 30
          example: Currency          
        area:
          type: integer
          format: int32
          minimum: 0
          example: 100000
        language:
          type: string
          maxLength: 50
          example: language
    User:
      type: object
      required:
        - id
        - name
        - email
        - role_id
      properties:
        id:
          type: integer
          format: int32
          minimum: 0
          example: 1
        name:
          type: string
          maxLength: 50
          example: Name
        email:
          type: string
          minLength: 4
          example: email@mail.com
        role_id:
          type: integer
          format: int32
          minimum: 0
          example: 1
    CountryResource:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: '#/components/schemas/Country'
        - type: object
    CountryCollection:
      type: object  
      properties:
        data:
          type: array
          items:
           $ref: '#/components/schemas/CountryResource'
    StoreCountryRequest:
      type: object 
      allOf:
        - $ref: '#/components/schemas/Country'
        - type: object
    UpdateCountryRequest:
      type: object 
      allOf:
        - $ref: '#/components/schemas/Country'
        - type: object
    credentials:  
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string  
          format: email
          example: user@email.com
        password:
          type: string 
          example: pass
    access_token:
      type: object
      properties:
        access_token:
          type: string     
          example: header.payload.signature
        token_type:
          type: string 
          example: bearer            
        expires_in:
          type: integer 
          example: 60
    success:
      properties:
        message:
          type: string
          example: success
